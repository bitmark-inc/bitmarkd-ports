# bitmarkd.conf  -*- mode: libucl -*-

# "." is a special case - it uses the path from the configuration file
# as the data directory.
# all certificates, logs and LevelDB files are relative to this  directory
# unless the are overridden with absolute paths.
#data_directory = "."
data_directory = "/var/lib/bitmarkd/testing"

# optional pid file if not absolute path then is created relative to
# the data directory
# pidfile = "bitmarkd.pid"

# select the chain of the network for peer connections
# cross chain networking connects will not work
#chain = bitmark
#chain = testing
chain = testing


# Bitmark Vault clients connect using JSON RPC to these listening ports
client_rpc {

  maximum_connections = 50

  listen = 127.0.0.1:2130
  listen = 127.0.0.1:2131
  listen = "[::1]:2132"

  # announce certain public IP:ports to network
  # if using firewall port forwarding use the firewall IP:port
  # announce = 127.0.0.1:2131
  # announce = "[::1]:2132"

  certificate = bitmarkd-local-rpc.crt
  private_key = bitmarkd-local-rpc.key
}


# peer-to-peer networking configuration
peering {

  maximum_connections = 10

  listen = 0.0.0.0:2135
  listen = "[::]:2136"
  # listen = "[::]:2137"

  # announce certain public IP:ports to network
  # if using firewall port forwarding use the firewall IP:port
  # announce = 127.0.0.1:2135
  # announce = "[::]:2137"

  public_key = bitmarkd-local.public
  private_key = bitmarkd-local.private

  # connections to other peers
  # connect = {public_key = "hR}n^Uv:4b3!zI<jfgg6Wrhhy.ssgk2S/s+t%rQE", address = "127.0.0.1:3135"}
  # connect = {public_key = "WssDb0.mqFph#y7fUxS6}9ht}zcs!%C[pxAi{t]K", address = "[::1]:3135"}

}


# configuration of stratum miner RPC
mining {

  maximum_connections = 10

  listen = 0.0.0.0:2140
  listen = "[::]:2141"

  certificate = bitmarkd-local-mine.crt
  private_key = bitmarkd-local-mine.key

}


# local bitcoin access to pool for blocks and forward client payments
# not recommended to have this be a miner or retain any keys with funds
bitcoin {

  # loacl connection to bitcoind
  username = my-bitcoin-user
  password = my-secret-bitcoin-password
  url = http://127.0.0.1:18333

  # to enable client side TLS authentication
  # for miniature-spoon proxy
  # ca_certificate = ca.crt
  # certificate = client.crt
  # private_key = client.key
  # url = https://127.0.0.1:18555/rpc-call

  # fee is a string to prevent rounding to float
  fee = "0.0002"

  # address to receive mining payments
  # and for security the bitcoind above should not have its private key
  address = "some-test-net-address"

}

# logging configuration
logging {
  size = 1048576
  count = 10

  # set the logging level for various modules
  # modules not overridden with get the value from "*"
  # the default value for "*" is "critical"
  levels {
    "*" = info
    # "*" = debug

    # client RPC
    rpc = info
    rpc-server = info

    # mining
    mine-bg = info
    mine-server = info

    # data
    mode = info
    block = info
    transaction = info
    bitcoin = info
    payment = info

    # peering
    peer = info
    client = info
    responder = info
    announcer = info

    # other
    main = info
    bilateral = info
  }
}
